"""Build mes from M2-Planet

GNU Mes is a Scheme interpreter and C compiler for bootstrapping the GNU System.
"""

load("//tools/stage0:hex2_1.bzl", "hex2_binary")
load("//tools/stage0:m1.bzl", "m1_expand")
load("//tools/stage0:m2.bzl", "m2_compile")
load("//tools/stage0:bloodelf.bzl", "blood_elf")

package(
    default_visibility = ["//visibility:public"],
)

m2_compile(
    name = "mes.M1",
    srcs = [ 
    # do not sort
    "@mes-m2//:include/mes/config.h",
    "@mes-m2//:include/mes/lib-mini.h",
    "@mes-m2//:include/mes/lib.h",
    "@mes-m2//:lib/linux/x86_64-mes-m2/crt1.c",
    "@mes-m2//:lib/mes/__init_io.c",
    "@mes-m2//:lib/linux/x86_64-mes-m2/_exit.c",
    "@mes-m2//:lib/linux/x86_64-mes-m2/_write.c",
    "@mes-m2//:lib/mes/globals.c",
    "@mes-m2//:lib/m2/cast.c",
    "@mes-m2//:lib/stdlib/exit.c",
    "@mes-m2//:lib/mes/write.c",
    "@mes-m2//:include/linux/x86_64/syscall.h",
    "@mes-m2//:lib/linux/x86_64-mes-m2/syscall.c",
    "@mes-m2//:lib/stub/__raise.c",
    "@mes-m2//:lib/linux/brk.c",
    "@mes-m2//:lib/linux/malloc.c",
    "@mes-m2//:lib/string/memset.c",
    "@mes-m2//:lib/linux/read.c",
    "@mes-m2//:lib/mes/fdgetc.c",
    "@mes-m2//:lib/stdio/getchar.c",
    "@mes-m2//:lib/stdio/putchar.c",
    "@mes-m2//:lib/stub/__buffered_read.c",
    "@mes-m2//:include/errno.h",
    "@mes-m2//:include/fcntl.h",
    "@mes-m2//:lib/linux/_open3.c",
    "@mes-m2//:lib/linux/open.c",
    "@mes-m2//:lib/mes/mes_open.c",
    "@mes-m2//:lib/string/strlen.c",
    "@mes-m2//:lib/mes/eputs.c",
    "@mes-m2//:lib/mes/fdputc.c",
    "@mes-m2//:lib/mes/eputc.c",
    "@mes-m2//:include/time.h",
    "@mes-m2//:include/sys/time.h",
    "@mes-m2//:include/m2/types.h",
    "@mes-m2//:include/sys/types.h",
    "@mes-m2//:include/sys/utsname.h",
    "@mes-m2//:include/mes/mes.h",
    "@mes-m2//:include/mes/builtins.h",
    "@mes-m2//:include/mes/constants.h",
    "@mes-m2//:include/mes/symbols.h",
    "@mes-m2//:lib/mes/__assert_fail.c",
    "@mes-m2//:lib/mes/assert_msg.c",
    "@mes-m2//:lib/string/strncmp.c",
    "@mes-m2//:lib/posix/getenv.c",
    "@mes-m2//:lib/mes/fdputs.c",
    "@mes-m2//:lib/mes/ntoab.c",
    "@mes-m2//:lib/ctype/isdigit.c",
    "@mes-m2//:lib/ctype/isxdigit.c",
    "@mes-m2//:lib/ctype/isspace.c",
    "@mes-m2//:lib/ctype/isnumber.c",
    "@mes-m2//:lib/mes/abtol.c",
    "@mes-m2//:lib/stdlib/atoi.c",
    "@mes-m2//:lib/string/memcpy.c",
    "@mes-m2//:lib/stdlib/free.c",
    "@mes-m2//:lib/stdlib/realloc.c",
    "@mes-m2//:lib/string/strcpy.c",
    "@mes-m2//:lib/mes/itoa.c",
    "@mes-m2//:lib/mes/ltoa.c",
    "@mes-m2//:lib/mes/fdungetc.c",
    "@mes-m2//:lib/posix/setenv.c",
    "@mes-m2//:lib/linux/access.c",
    "@mes-m2//:include/linux/m2/kernel-stat.h",
    "@mes-m2//:include/sys/stat.h",
    "@mes-m2//:lib/linux/chmod.c",
    "@mes-m2//:lib/linux/ioctl3.c",
    "@mes-m2//:include/sys/ioctl.h",
    "@mes-m2//:lib/m2/isatty.c",
    "@mes-m2//:include/signal.h",
    "@mes-m2//:lib/linux/fork.c",
    "@mes-m2//:lib/m2/execve.c",
    "@mes-m2//:lib/m2/execv.c",
    "@mes-m2//:include/sys/resource.h",
    "@mes-m2//:lib/linux/wait4.c",
    "@mes-m2//:lib/linux/waitpid.c",
    "@mes-m2//:lib/linux/gettimeofday.c",
    "@mes-m2//:lib/linux/clock_gettime.c",
    "@mes-m2//:lib/m2/time.c",
    "@mes-m2//:lib/linux/_getcwd.c",
    "@mes-m2//:include/limits.h",
    "@mes-m2//:lib/m2/getcwd.c",
    "@mes-m2//:lib/linux/dup.c",
    "@mes-m2//:lib/linux/dup2.c",
    "@mes-m2//:lib/string/strcmp.c",
    "@mes-m2//:lib/string/memcmp.c",
    "@mes-m2//:lib/linux/uname.c",
    "@mes-m2//:lib/linux/unlink.c",
    "@mes-m2//:src/builtins.c",
    "@mes-m2//:src/core.c",
    "@mes-m2//:src/display.c",
    "@mes-m2//:src/eval-apply.c",
    "@mes-m2//:src/gc.c",
    "@mes-m2//:src/hash.c",
    "@mes-m2//:src/lib.c",
    "@mes-m2//:src/m2.c",
    "@mes-m2//:src/math.c",
    "@mes-m2//:src/mes.c",
    "@mes-m2//:src/module.c",
    "@mes-m2//:src/posix.c",
    "@mes-m2//:src/reader.c",
    "@mes-m2//:src/stack.c",
    "@mes-m2//:src/string.c",
    "@mes-m2//:src/struct.c",
    "@mes-m2//:src/symbol.c",
    "@mes-m2//:src/variable.c",
    "@mes-m2//:src/vector.c",
    ],
    architecture = select({
        "@bazel_tools//src/conditions:linux_x86_64": "amd64",
    }),
    is_debug = True,
    compiler = "@//tools/stage0/phase15:M2-Planet",
    defines = {
        "__linux__" : "1",
        "__x86_64__" : "1",
    },
)

blood_elf(
    name = "mes-footer.M1",
    src = ":mes.M1",
    is_little_endian = select({
        "@bazel_tools//src/conditions:linux_x86_64": True,
    }),
    is_64 = True,
)
m1_expand(
    name = "mes.hex2",
    srcs = select(
        {
            "@bazel_tools//src/conditions:linux_x86_64": [
                # do not sort
                "@mes-m2//:lib/m2/x86_64/x86_64_defs.M1",
                "@mes-m2//:lib/x86_64-mes/x86_64.M1",
                "@mes-m2//:lib/linux/x86_64-mes-m2/crt1.M1",
            ],
        },
    ) + [
        ":mes.M1",
        ":mes-footer.M1",
    ],
    architecture = select({
        "@bazel_tools//src/conditions:linux_x86_64": "amd64",
    }),
    is_little_endian = select({
        "@bazel_tools//src/conditions:linux_x86_64": True,
    }),
    tool = "//tools/stage0/phase9:M1"
)

hex2_binary(
    name = "mes-m2",
    srcs = select(
        {
            "@bazel_tools//src/conditions:linux_x86_64": [
                # do not sort
                "@mes-m2//:lib/m2/x86_64/ELF-x86_64.hex2",
            ],
        },
    ) + [
        ":mes.hex2",
    ],
    base_address = "0x1000000",
    architecture = select({
        "@bazel_tools//src/conditions:linux_x86_64": "amd64",
    }),
    is_little_endian = select({
        "@bazel_tools//src/conditions:linux_x86_64": True,
    }),
    tool = "//tools/stage0/phase8:hex2-1"
)
